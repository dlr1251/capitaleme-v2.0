---
import { getCollection } from 'astro:content';

interface Props {
  lang?: 'en' | 'es';
}

const { lang = 'en' } = Astro.props;

const resources = await getCollection('resources', ({ id }) => {
  return id.startsWith(lang === 'es' ? 'es/' : 'en/');
});

// Define content based on language
const content = lang === 'es' ? {
  title: "No te pierdas nuestros últimos artículos",
  readMore: "Leer más"
} : {
  title: "Don't miss our latest articles",
  readMore: "Read More"
};
---

<div class="mt-20">
  <div class="text-terciary font-bold text-3xl mb-8">{content.title}</div>
  <div class="grid gap-8 lg:grid-cols-2 xl:grid-cols-3">
    {resources.map((resource) => (
      <a 
        href={`/resources/${resource.slug.slice(3)}`}
        class="bg-white shadow-lg rounded-lg px-6 py-4 border border-gray-200 transition transform hover:-translate-y-1 hover:shadow-xl"
      >
        <h3 class="text-xl font-semibold text-gray-800 mb-2">{resource.data.title}</h3>
        <p class="text-gray-600 mb-4 line-clamp-3">{resource.data.description}</p>
        <button 
          class="text-sm font-medium text-blue-500 hover:text-blue-700 focus:outline-none" 
          data-title={resource.data.title}
        >
          {content.readMore}
        </button>
      </a>
    ))}
  </div>
</div>

<script>
  document.querySelectorAll('button[data-title]').forEach(button => {
    button.addEventListener('click', (e) => {
      const title = (e.currentTarget as HTMLElement).dataset.title;
      alert(`Read more about ${title}`);
    });
  });
</script>